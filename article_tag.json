{"DB":[{"id":2,"regDate":"2020-12-18 09:02:49","updateDate":"2021-01-19 17:12:34","title":"[Java] 기본 문법😀","body":"# 자바기본문법\r\n```java\r\nint a = 10;\r\nint b = 20;\r\nint c = a + b;\r\n```","memberId":2,"boardId":2,"hit":2,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"INSERT":[{"id":2,"regDate":"2020-12-18 09:02:49","updateDate":"2021-01-19 17:12:34","title":"[Java] 기본 문법😀","body":"# 자바기본문법\r\n```java\r\nint a = 10;\r\nint b = 20;\r\nint c = a + b;\r\n```","memberId":2,"boardId":2,"hit":2,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"JAVA":[{"id":11,"regDate":"2021-01-14 20:41:19","updateDate":"2021-01-19 17:12:31","title":"[java][programmers] 모의고사","body":"# .완전탐색\r\n\r\n문제 \r\n\r\n수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.\r\n\r\n1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...\r\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...\r\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...\r\n\r\n1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.\r\n\r\n제한 조건\r\n시험은 최대 10,000 문제로 구성되어있습니다.\r\n문제의 정답은 1, 2, 3, 4, 5중 하나입니다.\r\n가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.\r\n입출력 예\r\nanswers\treturn\r\n[1,2,3,4,5]\t[1]\r\n[1,3,2,4,2]\t[1,2,3]\r\n입출력 예 설명\r\n입출력 예 #1\r\n\r\n수포자 1은 모든 문제를 맞혔습니다.\r\n수포자 2는 모든 문제를 틀렸습니다.\r\n수포자 3은 모든 문제를 틀렸습니다.\r\n따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.\r\n\r\n입출력 예 #2\r\n\r\n모든 사람이 2문제씩을 맞췄습니다.\r\n\r\n\r\n# .정답\r\n```java\r\nclass Solution {\r\n    public int[] solution(int[] answers) {\r\n        int[] answer = {};\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0};\r\n        '<'\r\n        int max = 0;\r\n        \r\n        for(int i = 0; i \\< answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n               \r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n        \r\n        if(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n        \r\n      \r\n        return answer;\r\n    }\r\n}\r\n\r\n```\r\n\r\n# .설명\r\n```\r\n        int[] answer = {}; // 정답\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0}; // 점수\r\n```\r\n\r\none, two, three 각각의 수포자의 정답 패턴을 배열에 저장합니다.\r\n\r\n```\r\n      for(int i = 0; i < answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){ //나머지를 계산하여 0~5 순서로 반복 계산\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n```\r\n\r\n정답이 들어있는 answeres의 크기만큼 for문을 돕니다. \r\n\r\n도는 중 if문으로 one, two, three의 정답을 계산하여 sum에 각각 저장합니다.\r\n\r\n그 후 가장 큰 점수를 max에 넣습니다.\r\n\r\n```\r\nif(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n   \r\n        return answer;\r\n    }\r\n}\r\n```\r\n\r\n공동 순위기 있을경우 오름차순으로 리턴해야하기 때문에 else if문으로 경우의 수를 모두 적어줍니다.\r\n\r\n되는데로 작성한거라 그닥 효율적이지는 않은거같습니다.\r\n\r\n","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"},{"id":10,"regDate":"2021-01-06 20:42:57","updateDate":"2021-01-19 17:12:32","title":"[Java] 소문자, 대문자 변환하기","body":"# .소문자, 대문자 변환하기\r\n```java \r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\r\n\t\tString s = \"s\";\r\n\t\tString d = \"D\";\r\n\t\t\r\n\t\tSystem.out.println(s.toUpperCase()); // 소문자 -> 대문자\r\n\t\tSystem.out.println(d.toLowerCase()); // 대문자 -> 소문자\r\n\t\t\r\n\t}\r\n}\r\n\r\n```\r\n소문자 대문자 변환방법\r\n\r\ntoUpperCase 소 -> 대\r\ntoLowerCase 대 -> 소","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"SQL":[{"id":2,"regDate":"2020-12-18 09:02:49","updateDate":"2021-01-19 17:12:34","title":"[Java] 기본 문법😀","body":"# 자바기본문법\r\n```java\r\nint a = 10;\r\nint b = 20;\r\nint c = a + b;\r\n```","memberId":2,"boardId":2,"hit":2,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"기초":[{"id":10,"regDate":"2021-01-06 20:42:57","updateDate":"2021-01-19 17:12:32","title":"[Java] 소문자, 대문자 변환하기","body":"# .소문자, 대문자 변환하기\r\n```java \r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\r\n\t\tString s = \"s\";\r\n\t\tString d = \"D\";\r\n\t\t\r\n\t\tSystem.out.println(s.toUpperCase()); // 소문자 -> 대문자\r\n\t\tSystem.out.println(d.toLowerCase()); // 대문자 -> 소문자\r\n\t\t\r\n\t}\r\n}\r\n\r\n```\r\n소문자 대문자 변환방법\r\n\r\ntoUpperCase 소 -> 대\r\ntoLowerCase 대 -> 소","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"대문자":[{"id":10,"regDate":"2021-01-06 20:42:57","updateDate":"2021-01-19 17:12:32","title":"[Java] 소문자, 대문자 변환하기","body":"# .소문자, 대문자 변환하기\r\n```java \r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\r\n\t\tString s = \"s\";\r\n\t\tString d = \"D\";\r\n\t\t\r\n\t\tSystem.out.println(s.toUpperCase()); // 소문자 -> 대문자\r\n\t\tSystem.out.println(d.toLowerCase()); // 대문자 -> 소문자\r\n\t\t\r\n\t}\r\n}\r\n\r\n```\r\n소문자 대문자 변환방법\r\n\r\ntoUpperCase 소 -> 대\r\ntoLowerCase 대 -> 소","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"문제":[{"id":11,"regDate":"2021-01-14 20:41:19","updateDate":"2021-01-19 17:12:31","title":"[java][programmers] 모의고사","body":"# .완전탐색\r\n\r\n문제 \r\n\r\n수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.\r\n\r\n1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...\r\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...\r\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...\r\n\r\n1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.\r\n\r\n제한 조건\r\n시험은 최대 10,000 문제로 구성되어있습니다.\r\n문제의 정답은 1, 2, 3, 4, 5중 하나입니다.\r\n가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.\r\n입출력 예\r\nanswers\treturn\r\n[1,2,3,4,5]\t[1]\r\n[1,3,2,4,2]\t[1,2,3]\r\n입출력 예 설명\r\n입출력 예 #1\r\n\r\n수포자 1은 모든 문제를 맞혔습니다.\r\n수포자 2는 모든 문제를 틀렸습니다.\r\n수포자 3은 모든 문제를 틀렸습니다.\r\n따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.\r\n\r\n입출력 예 #2\r\n\r\n모든 사람이 2문제씩을 맞췄습니다.\r\n\r\n\r\n# .정답\r\n```java\r\nclass Solution {\r\n    public int[] solution(int[] answers) {\r\n        int[] answer = {};\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0};\r\n        '<'\r\n        int max = 0;\r\n        \r\n        for(int i = 0; i \\< answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n               \r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n        \r\n        if(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n        \r\n      \r\n        return answer;\r\n    }\r\n}\r\n\r\n```\r\n\r\n# .설명\r\n```\r\n        int[] answer = {}; // 정답\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0}; // 점수\r\n```\r\n\r\none, two, three 각각의 수포자의 정답 패턴을 배열에 저장합니다.\r\n\r\n```\r\n      for(int i = 0; i < answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){ //나머지를 계산하여 0~5 순서로 반복 계산\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n```\r\n\r\n정답이 들어있는 answeres의 크기만큼 for문을 돕니다. \r\n\r\n도는 중 if문으로 one, two, three의 정답을 계산하여 sum에 각각 저장합니다.\r\n\r\n그 후 가장 큰 점수를 max에 넣습니다.\r\n\r\n```\r\nif(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n   \r\n        return answer;\r\n    }\r\n}\r\n```\r\n\r\n공동 순위기 있을경우 오름차순으로 리턴해야하기 때문에 else if문으로 경우의 수를 모두 적어줍니다.\r\n\r\n되는데로 작성한거라 그닥 효율적이지는 않은거같습니다.\r\n\r\n","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"},{"id":10,"regDate":"2021-01-06 20:42:57","updateDate":"2021-01-19 17:12:32","title":"[Java] 소문자, 대문자 변환하기","body":"# .소문자, 대문자 변환하기\r\n```java \r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\r\n\t\tString s = \"s\";\r\n\t\tString d = \"D\";\r\n\t\t\r\n\t\tSystem.out.println(s.toUpperCase()); // 소문자 -> 대문자\r\n\t\tSystem.out.println(d.toLowerCase()); // 대문자 -> 소문자\r\n\t\t\r\n\t}\r\n}\r\n\r\n```\r\n소문자 대문자 변환방법\r\n\r\ntoUpperCase 소 -> 대\r\ntoLowerCase 대 -> 소","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"소문자":[{"id":10,"regDate":"2021-01-06 20:42:57","updateDate":"2021-01-19 17:12:32","title":"[Java] 소문자, 대문자 변환하기","body":"# .소문자, 대문자 변환하기\r\n```java \r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\r\n\t\tString s = \"s\";\r\n\t\tString d = \"D\";\r\n\t\t\r\n\t\tSystem.out.println(s.toUpperCase()); // 소문자 -> 대문자\r\n\t\tSystem.out.println(d.toLowerCase()); // 대문자 -> 소문자\r\n\t\t\r\n\t}\r\n}\r\n\r\n```\r\n소문자 대문자 변환방법\r\n\r\ntoUpperCase 소 -> 대\r\ntoLowerCase 대 -> 소","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"알고리즘":[{"id":11,"regDate":"2021-01-14 20:41:19","updateDate":"2021-01-19 17:12:31","title":"[java][programmers] 모의고사","body":"# .완전탐색\r\n\r\n문제 \r\n\r\n수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.\r\n\r\n1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...\r\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...\r\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...\r\n\r\n1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.\r\n\r\n제한 조건\r\n시험은 최대 10,000 문제로 구성되어있습니다.\r\n문제의 정답은 1, 2, 3, 4, 5중 하나입니다.\r\n가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.\r\n입출력 예\r\nanswers\treturn\r\n[1,2,3,4,5]\t[1]\r\n[1,3,2,4,2]\t[1,2,3]\r\n입출력 예 설명\r\n입출력 예 #1\r\n\r\n수포자 1은 모든 문제를 맞혔습니다.\r\n수포자 2는 모든 문제를 틀렸습니다.\r\n수포자 3은 모든 문제를 틀렸습니다.\r\n따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.\r\n\r\n입출력 예 #2\r\n\r\n모든 사람이 2문제씩을 맞췄습니다.\r\n\r\n\r\n# .정답\r\n```java\r\nclass Solution {\r\n    public int[] solution(int[] answers) {\r\n        int[] answer = {};\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0};\r\n        '<'\r\n        int max = 0;\r\n        \r\n        for(int i = 0; i \\< answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n               \r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n        \r\n        if(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n        \r\n      \r\n        return answer;\r\n    }\r\n}\r\n\r\n```\r\n\r\n# .설명\r\n```\r\n        int[] answer = {}; // 정답\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0}; // 점수\r\n```\r\n\r\none, two, three 각각의 수포자의 정답 패턴을 배열에 저장합니다.\r\n\r\n```\r\n      for(int i = 0; i < answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){ //나머지를 계산하여 0~5 순서로 반복 계산\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n```\r\n\r\n정답이 들어있는 answeres의 크기만큼 for문을 돕니다. \r\n\r\n도는 중 if문으로 one, two, three의 정답을 계산하여 sum에 각각 저장합니다.\r\n\r\n그 후 가장 큰 점수를 max에 넣습니다.\r\n\r\n```\r\nif(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n   \r\n        return answer;\r\n    }\r\n}\r\n```\r\n\r\n공동 순위기 있을경우 오름차순으로 리턴해야하기 때문에 else if문으로 경우의 수를 모두 적어줍니다.\r\n\r\n되는데로 작성한거라 그닥 효율적이지는 않은거같습니다.\r\n\r\n","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"완전탐색":[{"id":11,"regDate":"2021-01-14 20:41:19","updateDate":"2021-01-19 17:12:31","title":"[java][programmers] 모의고사","body":"# .완전탐색\r\n\r\n문제 \r\n\r\n수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.\r\n\r\n1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...\r\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...\r\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...\r\n\r\n1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.\r\n\r\n제한 조건\r\n시험은 최대 10,000 문제로 구성되어있습니다.\r\n문제의 정답은 1, 2, 3, 4, 5중 하나입니다.\r\n가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.\r\n입출력 예\r\nanswers\treturn\r\n[1,2,3,4,5]\t[1]\r\n[1,3,2,4,2]\t[1,2,3]\r\n입출력 예 설명\r\n입출력 예 #1\r\n\r\n수포자 1은 모든 문제를 맞혔습니다.\r\n수포자 2는 모든 문제를 틀렸습니다.\r\n수포자 3은 모든 문제를 틀렸습니다.\r\n따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.\r\n\r\n입출력 예 #2\r\n\r\n모든 사람이 2문제씩을 맞췄습니다.\r\n\r\n\r\n# .정답\r\n```java\r\nclass Solution {\r\n    public int[] solution(int[] answers) {\r\n        int[] answer = {};\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0};\r\n        '<'\r\n        int max = 0;\r\n        \r\n        for(int i = 0; i \\< answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n               \r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n        \r\n        if(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n        \r\n      \r\n        return answer;\r\n    }\r\n}\r\n\r\n```\r\n\r\n# .설명\r\n```\r\n        int[] answer = {}; // 정답\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0}; // 점수\r\n```\r\n\r\none, two, three 각각의 수포자의 정답 패턴을 배열에 저장합니다.\r\n\r\n```\r\n      for(int i = 0; i < answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){ //나머지를 계산하여 0~5 순서로 반복 계산\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n```\r\n\r\n정답이 들어있는 answeres의 크기만큼 for문을 돕니다. \r\n\r\n도는 중 if문으로 one, two, three의 정답을 계산하여 sum에 각각 저장합니다.\r\n\r\n그 후 가장 큰 점수를 max에 넣습니다.\r\n\r\n```\r\nif(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n   \r\n        return answer;\r\n    }\r\n}\r\n```\r\n\r\n공동 순위기 있을경우 오름차순으로 리턴해야하기 때문에 else if문으로 경우의 수를 모두 적어줍니다.\r\n\r\n되는데로 작성한거라 그닥 효율적이지는 않은거같습니다.\r\n\r\n","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"코드업":[{"id":10,"regDate":"2021-01-06 20:42:57","updateDate":"2021-01-19 17:12:32","title":"[Java] 소문자, 대문자 변환하기","body":"# .소문자, 대문자 변환하기\r\n```java \r\npublic class Main {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\r\n\t\tString s = \"s\";\r\n\t\tString d = \"D\";\r\n\t\t\r\n\t\tSystem.out.println(s.toUpperCase()); // 소문자 -> 대문자\r\n\t\tSystem.out.println(d.toLowerCase()); // 대문자 -> 소문자\r\n\t\t\r\n\t}\r\n}\r\n\r\n```\r\n소문자 대문자 변환방법\r\n\r\ntoUpperCase 소 -> 대\r\ntoLowerCase 대 -> 소","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}],"프로그래머스":[{"id":11,"regDate":"2021-01-14 20:41:19","updateDate":"2021-01-19 17:12:31","title":"[java][programmers] 모의고사","body":"# .완전탐색\r\n\r\n문제 \r\n\r\n수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.\r\n\r\n1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...\r\n2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...\r\n3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...\r\n\r\n1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.\r\n\r\n제한 조건\r\n시험은 최대 10,000 문제로 구성되어있습니다.\r\n문제의 정답은 1, 2, 3, 4, 5중 하나입니다.\r\n가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.\r\n입출력 예\r\nanswers\treturn\r\n[1,2,3,4,5]\t[1]\r\n[1,3,2,4,2]\t[1,2,3]\r\n입출력 예 설명\r\n입출력 예 #1\r\n\r\n수포자 1은 모든 문제를 맞혔습니다.\r\n수포자 2는 모든 문제를 틀렸습니다.\r\n수포자 3은 모든 문제를 틀렸습니다.\r\n따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다.\r\n\r\n입출력 예 #2\r\n\r\n모든 사람이 2문제씩을 맞췄습니다.\r\n\r\n\r\n# .정답\r\n```java\r\nclass Solution {\r\n    public int[] solution(int[] answers) {\r\n        int[] answer = {};\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0};\r\n        '<'\r\n        int max = 0;\r\n        \r\n        for(int i = 0; i \\< answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n               \r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n        \r\n        if(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n        \r\n      \r\n        return answer;\r\n    }\r\n}\r\n\r\n```\r\n\r\n# .설명\r\n```\r\n        int[] answer = {}; // 정답\r\n        int[] one = {1,2,3,4,5};\r\n        int[] two = {2,1,2,3,2,4,2,5};\r\n        int[] three = {3,3,1,1,2,2,4,4,5,5};\r\n        int[] sum = {0, 0, 0}; // 점수\r\n```\r\n\r\none, two, three 각각의 수포자의 정답 패턴을 배열에 저장합니다.\r\n\r\n```\r\n      for(int i = 0; i < answers.length ; i++){\r\n            \r\n            if(one[i%5] == answers[i]){ //나머지를 계산하여 0~5 순서로 반복 계산\r\n                sum[0] += 1;\r\n            }\r\n            if(two[i%8] == answers[i]){\r\n                sum[1] += 1;\r\n            }\r\n            if(three[i%10] == answers[i]){\r\n                sum[2] += 1;\r\n            }       \r\n      }\r\n        for(int i = 0; i < sum.length ; i++){\r\n            if(max < sum[i]){\r\n                max = sum[i];\r\n            }\r\n        }\r\n```\r\n\r\n정답이 들어있는 answeres의 크기만큼 for문을 돕니다. \r\n\r\n도는 중 if문으로 one, two, three의 정답을 계산하여 sum에 각각 저장합니다.\r\n\r\n그 후 가장 큰 점수를 max에 넣습니다.\r\n\r\n```\r\nif(max == sum[0] && max == sum[1] && max == sum[2]){\r\n            answer = new int[3];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n            answer[2] = 3;\r\n        }\r\n        else if(max == sum[0] && max == sum[1]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 2;\r\n        }\r\n        else if(max == sum[0] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 1;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[1] && max == sum[2]){\r\n            answer = new int[2];\r\n            answer[0] = 2;\r\n            answer[1] = 3;\r\n        }\r\n        else if(max == sum[0]){\r\n            answer = new int[1];\r\n            answer[0] = 1;\r\n        }\r\n        else if(max == sum[1]){\r\n            answer = new int[1];\r\n            answer[0] = 2;\r\n        }\r\n        else if(max == sum[2]){\r\n            answer = new int[1];\r\n            answer[0] = 3;\r\n        }\r\n   \r\n        return answer;\r\n    }\r\n}\r\n```\r\n\r\n공동 순위기 있을경우 오름차순으로 리턴해야하기 때문에 else if문으로 경우의 수를 모두 적어줍니다.\r\n\r\n되는데로 작성한거라 그닥 효율적이지는 않은거같습니다.\r\n\r\n","memberId":2,"boardId":2,"hit":0,"likesCount":0,"commentsCount":0,"extra__tagsStr":null,"extra__writer":"호말"}]}